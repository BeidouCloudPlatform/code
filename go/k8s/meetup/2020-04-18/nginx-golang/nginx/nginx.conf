daemon off;

user                 nobody;
worker_processes     4;
worker_rlimit_nofile 65535;

events {
    # mac 上没法用 epoll
    # use epoll;
    worker_connections  10240;
}

http {
    sendfile                     on;
    gzip                         on;
    client_max_body_size        64m;

    # Docker标准格式
    log_format qssweb_docker_nginx
        '$remote_addr\t$http_x_forwarded_for\t$http_x_real_ip\t$remote_user\t[$time_iso8601]\t'
        '"$request"\t$status\t$body_bytes_sent\t"$http_referer"\t"$http_user_agent"\t"$gzip_ratio"\t'
        '$upstream_response_time\t$request_time\t$request_length\t$scheme\t$host\t$server_port';

    # lua 文件根目录
    lua_package_path "/var/www/html/prometheus/?.lua;;;";
    # lua 初始化文件
    init_by_lua_file "/var/www/html/prometheus/init.lua";
    # https://github.com/openresty/lua-nginx-module#lua_code_cache
    # 如果关闭，每一个请求都会在单独的 Lua VM 里执行
    lua_code_cache on;
    # 共享内存块 10MB
    lua_shared_dict prometheus_metrics 10m;

    # See Move default writable paths to a dedicated directory (#119)
    # https://github.com/openresty/docker-openresty/issues/119
    client_body_temp_path /var/run/openresty/nginx-client-body;
    proxy_temp_path       /var/run/openresty/nginx-proxy;
    fastcgi_temp_path     /var/run/openresty/nginx-fastcgi;
    uwsgi_temp_path       /var/run/openresty/nginx-uwsgi;
    scgi_temp_path        /var/run/openresty/nginx-scgi;

    # Prometheus
    server {
        # curl meetup.lx1036.com:2020/status
        # curl meetup.lx1036.com:2021/metrics
        listen 8001;
        allow 10.0.0.0/8;
        allow 172.0.0.0/8;
        # 容许在这个网段的客户端访问
        allow 192.0.0.0/8;
        deny all;
        default_type  text/plain;

        proxy_pass_request_headers off;

        access_log  /dev/stdout  qssweb_docker_nginx;
        error_log  /dev/stderr;

        # https://moonbingbing.gitbooks.io/openresty-best-practices/openresty/log_response.html
        # ngx.log(ngx.INFO, "obj:", "adf") 注释不能放到 lua 块内，否则报错。lua 的注释是 --
        location /metrics {
            content_by_lua_block {
                require("wrapper"):metrics()
            }
        }

        location /gometrics {
            proxy_pass http://goproxy:18081/metrics;
        }

        location /status {
            content_by_lua_block {
                ngx.say("ok")
            }
        }
    }

    server {
        listen 80 default_server;
        server_name  meetup.lx1036.com;
        charset utf-8;
        server_tokens off;

        root /var/www/html/pc;
        index index.html index.htm;

        access_log  /dev/stdout  qssweb_docker_nginx;
        error_log  /dev/stderr;

        # 这里记录 prometheus metrics
        # init.lua 里合并了 go metrics 的值
        log_by_lua_block {
            require("wrapper"):log()
        }

        set $match "";
        if ($http_origin ~* (.*\.lx1036.com)) {
            set $match "true";
        }

        set $mobile_rewrite isPC;
        if ($http_user_agent ~* "(.*android.*)|(.*Mobile Safari.*)|(.*Aphone.*)|(.*MeeGo; NokiaN9*.)|(.*blackberry.*)|(.*rim tablet os.*)|(.*iphone.*)|(.*ipod.*)|(.*opera mini.*)|(.*JUC.*)|(.*IUC.*)|(.*opera mobi.*)|avantgo|blazer|elaine|hiptop|palm|plucker|xiino|(windows ce; (iemobile|ppc|smartphone))|(.*windows phone os.*)|acer|zte|lenovo|moto|samu|nokia|sony|kindle|240x320|mobile|mmp|ucweb|midp|pocket|psp|symbian|smartphone|treo|up.browser|up.link|vodafone|wap") {
            set $mobile_rewrite isMobile;
        }
        location / {
            if ($mobile_rewrite = isMobile) {
                root /var/www/html/mobile;
            }
            # cors
            if ($match = "true") {
                add_header 'Access-Control-Allow-Origin' "$http_origin";
            }
            try_files $uri $uri/ /index.html;
            log_not_found on;
        }

        # /status.html
        location /status {
            content_by_lua_block {
                ngx.say("ok")
            }
        }

        location /status.html {
            try_files /not.exists /status.html;
        }

        location ^~ /api/v1 {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # 在 pod 里可以直接用 localhost
            proxy_pass http://goproxy:8080;
        }

        error_page 404 = /;
    }
}
