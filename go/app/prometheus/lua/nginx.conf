#user    nobody;
worker_processes  1;

error_log /Users/liuxiang/Code/lx1036/code/go/app/prometheus/lua/error.log;
pid /Users/liuxiang/Code/lx1036/code/go/app/prometheus/lua/nginx.pid;

events {
    worker_connections 1024;
}

daemon off;

http {
    init_by_lua_file "/Users/liuxiang/Code/lx1036/code/go/app/prometheus/lua/prometheus/init.lua";
    lua_package_path "/Users/liuxiang/Code/lx1036/code/go/app/prometheus/lua/prometheus/?.lua;;;";

    # Fetching the shm-based Lua dictionary object for the shared memory zone named DICT defined by the lua_shared_dict directive.
    # https://github.com/openresty/lua-nginx-module#ngxshareddict
    lua_shared_dict prometheus_metrics 10m;

    lua_code_cache on;

    # Docker标准格式
    #log_format docker_nginx
     #   '$remote_addr\t$http_x_forwarded_for\t$http_x_real_ip\t$remote_user\t[$time_iso8601]\t'
      #  '"$request"\t$status\t$body_bytes_sent\t"$http_referer"\t"$http_user_agent"\t"$gzip_ratio"\t'
       # '$upstream_response_time\t$request_time\t$request_length\t$scheme\t$host\t$server_port';
    log_format docker '$remote_addr-$remote_user[$time_local] "$request" $status $bytes_sent $request_length';

    server {
        access_log /Users/liuxiang/Code/lx1036/code/go/app/prometheus/lua/access.log;

        listen 8001;
        location /metrics {
            default_type text/plain;

            # 读监控 metrics
            content_by_lua_block {
               #require("wrapper"):metrics()
            }
        }
    }

    server {
        access_log /Users/liuxiang/Code/lx1036/code/go/app/prometheus/lua/access.log docker;

        listen 80 default_server;
        location / {
            default_type text/plain;

            # 写监控 metrics
            log_by_lua_block {
               #require("wrapper"):log()
            }
        }
    }
}
